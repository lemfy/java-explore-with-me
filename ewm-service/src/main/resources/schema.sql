create TABLE IF NOT EXISTS users
(
    id                 INTEGER       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email              VARCHAR(255)  NOT NULL,
    name               VARCHAR(255)  NOT NULL,
    rating             INTEGER       DEFAULT 0,
    UNIQUE (email)
);

create TABLE IF NOT EXISTS categories
(
    id                 INTEGER       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name               VARCHAR(255)  NOT NULL,
    UNIQUE (name)
);

create TABLE IF NOT EXISTS events
(
    id                 BIGINT        GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_on         TIMESTAMP     DEFAULT NOW(),
    event_date         TIMESTAMP     NOT NULL,
    published_on       TIMESTAMP,
    title              VARCHAR(120)  NOT NULL,
    annotation         VARCHAR(2000) NOT NULL,
    description        VARCHAR(7000),
    user_id            BIGINT        NOT NULL,
    category_id        BIGINT        NOT NULL,
    participant_limit  INTEGER       DEFAULT 0,
    confirmed_requests INTEGER       DEFAULT 0,
    likes              INTEGER       DEFAULT 0,
    dislikes           INTEGER       DEFAULT 0,
    rating             FLOAT         DEFAULT 0,
    paid               BOOLEAN       NOT NULL,
    request_moderation BOOLEAN       DEFAULT TRUE,
    state              VARCHAR(15)   NOT NULL,
    latitude           FLOAT         NOT NULL,
    longitude          FLOAT         NOT NULL,
    FOREIGN KEY (category_id)        REFERENCES categories (id) ON delete RESTRICT,
    FOREIGN KEY (user_id)            REFERENCES users (id) ON delete CASCADE
);

create TABLE IF NOT EXISTS requests
(
    id                  BIGINT       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id            BIGINT       NOT NULL,
    user_id             BIGINT       NOT NULL,
    status              VARCHAR(15)  NOT NULL,
    created             TIMESTAMP    DEFAULT NOW(),
    FOREIGN KEY (event_id)           REFERENCES events (id) ON delete CASCADE,
    FOREIGN KEY (user_id)            REFERENCES users (id) ON delete CASCADE,
    UNIQUE (event_id, user_id)
);

create TABLE IF NOT EXISTS compilations
(
    id                  BIGINT       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned              BOOLEAN      NOT NULL,
    title               VARCHAR(120) NOT NULL
);

create TABLE IF NOT EXISTS compilation_events
(
    id                  BIGINT       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id            BIGINT       NOT NULL,
    compilation_id      BIGINT       NOT NULL,
    FOREIGN KEY (event_id)           REFERENCES events (id) ON delete CASCADE,
    FOREIGN KEY (compilation_id)     REFERENCES compilations (id) ON delete CASCADE
);

create TABLE IF NOT EXISTS event_likes
(
    id                  BIGINT       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id            BIGINT       NOT NULL,
    user_id             BIGINT       NOT NULL,
    like_type           VARCHAR(15)  NOT NULL,
    created_on          TIMESTAMP    DEFAULT NOW(),
    FOREIGN KEY (event_id)           REFERENCES events (id) ON delete CASCADE,
    FOREIGN KEY (user_id)            REFERENCES users (id) ON delete CASCADE
);